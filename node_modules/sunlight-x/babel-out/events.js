"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
// sunlight-x: Intelligent Syntax Highlighting, Modernized
// Copyright 2017 Leung Wing-chung. All rights reserved.
// Use of this source code is governed by a Apache License Version 2.0, that can
// be found in the LICENSE file.

class EventClass {
  constructor() {
    this.delegates = [];
  }
  addListener(callback) {
    this.delegates.push(callback);
  }
  raise(highlighter, eventArgs) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = this.delegates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var delegate = _step.value;
        delegate(highlighter, eventArgs);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
}

var BeforeHighlightNodeEvent = exports.BeforeHighlightNodeEvent = new EventClass();

var BeforeHighlightEvent = exports.BeforeHighlightEvent = new EventClass();

var BeforeTokenizeEvent = exports.BeforeTokenizeEvent = new EventClass();

var AfterTokenizeEvent = exports.AfterTokenizeEvent = new EventClass();

var BeforeAnalyzeEvent = exports.BeforeAnalyzeEvent = new EventClass();

var AfterAnalyzeEvent = exports.AfterAnalyzeEvent = new EventClass();

var AfterHighlightEvent = exports.AfterHighlightEvent = new EventClass();

var AfterHighlightNodeEvent = exports.AfterHighlightNodeEvent = new EventClass();