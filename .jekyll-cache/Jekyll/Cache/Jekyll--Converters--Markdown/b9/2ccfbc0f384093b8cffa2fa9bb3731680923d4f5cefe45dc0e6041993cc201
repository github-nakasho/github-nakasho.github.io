I"k
<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#クリーク被覆問題-clique-cover-problem" id="markdown-toc-クリーク被覆問題-clique-cover-problem">クリーク被覆問題 (Clique cover problem)</a>    <ol>
      <li><a href="#概要" id="markdown-toc-概要">概要</a>        <ol>
          <li><a href="#完全グラフ" id="markdown-toc-完全グラフ">完全グラフ</a></li>
        </ol>
      </li>
      <li><a href="#数理モデル" id="markdown-toc-数理モデル">数理モデル</a>        <ol>
          <li><a href="#バイナリ変数" id="markdown-toc-バイナリ変数">バイナリ変数</a></li>
          <li><a href="#制約-1つの頂点は1つの色しか選択できない" id="markdown-toc-制約-1つの頂点は1つの色しか選択できない">制約: 1つの頂点は1つの色しか選択できない</a></li>
          <li><a href="#目的関数-完全グラフからの差を最小化する" id="markdown-toc-目的関数-完全グラフからの差を最小化する">目的関数: 完全グラフからの差を最小化する</a></li>
          <li><a href="#ハミルトニアン" id="markdown-toc-ハミルトニアン">ハミルトニアン</a></li>
        </ol>
      </li>
    </ol>
  </li>
  <li><a href="#参考文献" id="markdown-toc-参考文献">参考文献</a></li>
</ol>

</details>

<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9131160172347693" crossorigin="anonymous"></script>

<!-- for_jekyll -->
<p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9131160172347693" data-ad-slot="3528582902" data-ad-format="auto" data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h1 id="クリーク被覆問題-clique-cover-problem">クリーク被覆問題 (Clique cover problem)</h1>

<p>ここではクリーク被覆問題の定式化について、忘れないようにメモしておきます。</p>

<h2 id="概要">概要</h2>

<p>この問題は、あるグラフが与えられたときに何個のクリーク(完全グラフ)に分割されるかを考える問題です。この問題はNP完全として知られます。</p>

<h3 id="完全グラフ">完全グラフ</h3>

<p>完全グラフ(complete graph)とは、異なる2点が全て隣接しているグラフ構造のことです。ただしループや多重辺は含みません。以下は頂点数4の完全グラフの例です。</p>

<p><img src="/assets/images/mo/clique_cover_01.png" alt="" /></p>

<p>頂点数\(N\)の完全グラフは、数学記号で\(K_N\)と表されます。<br />
\(K_N\)はそこに含まれる2点を選んだときに、その2点が必ず辺で結ばれているような構造を持ちます。すると辺の数は\(N\)個の頂点から2つを選ぶ組合せの数\({}_N C_2 = \frac{1}{2} N (N-1)\)だけあることがわかります。</p>

<h2 id="数理モデル">数理モデル</h2>

<p>(量子)アニーリングで最適化問題を解くためには、数理モデルが必要です。ここでは以下の考え方から、クリーク被覆問題を数式で表すことを考えます。</p>

<h3 id="バイナリ変数">バイナリ変数</h3>

<p>頂点\(v\)が\(c\)番目のクリークに属するとき\(x_{v, c} = 1\)、そうでないとき\(x_{v, c}=0\)となるような[0, 1]のバイナリ変数\(x_{v, c}\)を考えます。クリークに分ける操作を、頂点を塗り分ける操作と考えた方がイメージが掴みやすいかもしれません。</p>

<h3 id="制約-1つの頂点は1つの色しか選択できない">制約: 1つの頂点は1つの色しか選択できない</h3>

<p>これを数式で表現すると</p>

\[\sum_{c=0}^{C-1} x_{v, c} = 1 \quad (\forall v) \tag{2}\]

<p>ここで\(C\)は、塗り分けたい色の総数です。</p>

<h3 id="目的関数-完全グラフからの差を最小化する">目的関数: 完全グラフからの差を最小化する</h3>

<p>色\(c\)に塗り分けられた部分の頂点数を\(N_c\)とすると、この頂点たちが完全グラフを形成しているなら、その辺の数は\(\frac{1}{2} N_c (N_c -1)\)となります。しかし、色\(c\)に塗り分けられた頂点が形成する実際の辺の数は\(\sum_{(i, j) \in E} x_{i, c} x_{j, c}\)で表されます。今の問題設定から、色\(c\)に塗り分けられた頂点はなるべく完全グラフを形成してほしいため、この差が0に近いほど綺麗にグラフがクリークに分けられていることになります。よって目的関数を</p>

\[\mathrm{obj} 
= \sum_{c=0}^{C-1} \left\{ \frac{1}{2} \sum_{v =0}^{V-1} x_{v, c} \left( \sum_{v =0}^{V-1} x_{v, c} -1 \right) - \sum_{(i, j) \in E} x_{i, c} x_{j, c} \right\} \tag{3}\]

<p>のように定めます。ここで\(V\)は考えているグラフの頂点数です。</p>

<h3 id="ハミルトニアン">ハミルトニアン</h3>

<p>(2), (3)式から、この最適化問題のQUBOハミルトニアンは</p>

\[H 
= \mathrm{obj} + \lambda \sum_{v=0}^{V-1} \left( \sum_{c=0}^{C-1} x_{v, c} -1\right)^2 \tag{4}\]

<p>ここで\(\lambda\)は(2)式の制約の重みを表す定数(未定乗数)です。</p>

<h1 id="参考文献">参考文献</h1>

<p>[1] <a href="https://www.frontiersin.org/articles/10.3389/fphy.2014.00005/full">Lucas, 2014, “Ising formulations of many NP problems”</a></p>

<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9131160172347693" crossorigin="anonymous"></script>

<!-- for_jekyll -->
<p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9131160172347693" data-ad-slot="3528582902" data-ad-format="auto" data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

:ET