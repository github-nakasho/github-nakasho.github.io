I"t
<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#境界条件" id="markdown-toc-境界条件">境界条件</a>    <ol>
      <li><a href="#境界条件の定め方" id="markdown-toc-境界条件の定め方">境界条件の定め方</a></li>
      <li><a href="#様々な境界条件" id="markdown-toc-様々な境界条件">様々な境界条件</a>        <ol>
          <li><a href="#自由端境界条件" id="markdown-toc-自由端境界条件">自由端境界条件</a></li>
        </ol>
      </li>
    </ol>
  </li>
  <li><a href="#参考文献" id="markdown-toc-参考文献">参考文献</a></li>
</ol>

</details>

<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9131160172347693" crossorigin="anonymous"></script>

<!-- for_jekyll -->
<p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9131160172347693" data-ad-slot="3528582902" data-ad-format="auto" data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h1 id="境界条件">境界条件</h1>

<p>ここでは、オイラー的な(磁気)流体計算に必要となる境界条件についてメモしています。</p>

<h2 id="境界条件の定め方">境界条件の定め方</h2>

<p>その名の通り、計算領域の端に対して定める条件です。通常は、衝撃波などの激しい物理現象が起こるような、十分解像して調べたい領域から十分離れた場所に境界を設置します。
<a href="/simulation/hll">HLL法</a>や<a href="/simulation/hlld">HLLD法</a>のような近似リーマン解法の場合、セル中心だけでなく、セルとセルの間の仕切り部分(インターフェース)に対しても境界条件を設定する必要があります。</p>

<p><img src="/assets/images/simulation/boundary_01.png" alt="" /></p>

<p>上図のように1次元の流体計算を\(N\)個のセルを用いて数値計算する場合を考えましょう。このとき、\(N\)個のセルの両端に境界条件のための「のりしろ」を準備します。こののりしろのセル数は、ソルバーの精度によって変化します。
例えば2次精度であれば両側に1セルずつ、3次精度であれば両側に2セルずつ用意します。一般に、\(n\)次精度のソルバーで流体計算を行う場合には、\(n-1\)個のセルを計算領域の両側に配置する必要があります。<br />
2次精度の場合、上図から1番目と\(N+1\)番目のセルに境界条件を課します。これは1番目のセルの左側のインターフェースが存在しないため、流速計算を行うことができず、時間発展をさせることができないためです。
同様に、1番目のセルと2番目のセルの間にあるインターフェースにおいて、左側の物理量\(L_1\)も定めることができません。\(R_1\)は2番目と3番目のセルの物理量からの外挿、もしくは1番目と2番目のセルの物理量からの内挿により、求めることができます。
同じ理由から、\(N+1\)番目と\(N+2\)番目のセルの間にあるインターフェースの右側の物理量\(R_{N+1}\)も求めることができないことがわかります。よって2次精度の場合には、1番目と\(N+2\)番目のセル、そして\(L_1, R_{N+1}\)のインターフェース物理量は境界条件から定めます。<br />
3次精度の場合には、1番目と2番目と\(N+3\)番目と\(N+4\)番目のセル、そして\(L_1, R_1, L_2, R_{N+2}, L_{N+3}, R_{N+3}\)のインターフェース物理量を境界条件から定める必要があります。</p>

<h2 id="様々な境界条件">様々な境界条件</h2>

<p>それでは実際に、どのような境界条件が存在するかを見てみましょう。以下では簡単のため、計算精度は2次精度であるとします。先程の議論から計算領域に\(N\)セルを準備した場合、1セル目と\(N+2\)セル目は境界に用いるのりしろ、そして\(2 \leq i \leq N+1\)セル目が実際に計算を行う領域です。</p>

<h3 id="自由端境界条件">自由端境界条件</h3>

<p><img src="/assets/images/simulation/boundary_02.png" alt="" /></p>

<p>\(i\)番目のセルの\(n\)計算ステップ目の物理量を\(\mathbf{U}_i^n\)のように書きましょう。自由端境界では微分がゼロになるように物理量を定める必要があるため、以下のように課します。</p>

\[\mathbf{U}_{1}^{n} 
= \mathbf{U}_{2}^n, \quad \mathbf{U}_{N+2}^{n} 
= \mathbf{U}_{N+1}^n\tag{1}\]

<p>さらにインターフェースの左側・右側の物理量をそれぞれ\(\mathbf{U}_{L, i}^n, \mathbf{U}_{R, i}^n\)のように書くと、インターフェースに対しては</p>

\[\mathbf{U}_{L, 1}^n = \mathbf{U}_{R, 1}^n, \quad
\mathbf{U}_{R, N+1}^n = \mathbf{U}_{L, N+1}^n \tag{2}\]

<p>とすることで微分がゼロとなります。<br />
実際に数値計算した場合の挙動を以下に示します。</p>

<p><img src="/assets/images/simulation/boundary_03.gif" alt="" /></p>

<h1 id="参考文献">参考文献</h1>

<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9131160172347693" crossorigin="anonymous"></script>

<!-- for_jekyll -->
<p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9131160172347693" data-ad-slot="3528582902" data-ad-format="auto" data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

:ET