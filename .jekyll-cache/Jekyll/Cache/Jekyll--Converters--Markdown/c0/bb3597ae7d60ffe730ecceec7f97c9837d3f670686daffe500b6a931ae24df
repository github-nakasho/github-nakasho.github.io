I"H
<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#量子探索アルゴリズム" id="markdown-toc-量子探索アルゴリズム">量子探索アルゴリズム</a>    <ol>
      <li><a href="#オラクル" id="markdown-toc-オラクル">オラクル</a>        <ol>
          <li><a href="#オラクルとは" id="markdown-toc-オラクルとは">オラクルとは</a></li>
        </ol>
      </li>
      <li><a href="#グローバーのアルゴリズム" id="markdown-toc-グローバーのアルゴリズム">グローバーのアルゴリズム</a>        <ol>
          <li><a href="#アルゴリズムの流れ" id="markdown-toc-アルゴリズムの流れ">アルゴリズムの流れ</a>            <ol>
              <li><a href="#1-全ての状態の重ね合わせを用意する" id="markdown-toc-1-全ての状態の重ね合わせを用意する">1. 全ての状態の重ね合わせを用意する</a></li>
              <li><a href="#2-オラクル解に対する反転操作を作用させる" id="markdown-toc-2-オラクル解に対する反転操作を作用させる">2. オラクル(解に対する反転操作)を作用させる</a></li>
              <li><a href="#3-対称軸にした反転操作を作用させる" id="markdown-toc-3-対称軸にした反転操作を作用させる">3. 対称軸にした反転操作を作用させる</a></li>
              <li><a href="#4-ステップ2-3をk回繰り返す" id="markdown-toc-4-ステップ2-3をk回繰り返す">4. ステップ2, 3をk回繰り返す</a></li>
              <li><a href="#5-測定を行う" id="markdown-toc-5-測定を行う">5. 測定を行う</a></li>
            </ol>
          </li>
          <li><a href="#幾何学的な説明" id="markdown-toc-幾何学的な説明">幾何学的な説明</a>            <ol>
              <li><a href="#2次平面の定義" id="markdown-toc-2次平面の定義">2次平面の定義</a></li>
              <li><a href="#最適なkの見積もり" id="markdown-toc-最適なkの見積もり">最適なkの見積もり</a></li>
            </ol>
          </li>
        </ol>
      </li>
      <li><a href="#実装例" id="markdown-toc-実装例">実装例</a>        <ol>
          <li><a href="#kに対する依存性" id="markdown-toc-kに対する依存性">kに対する依存性</a></li>
        </ol>
      </li>
      <li><a href="#発展" id="markdown-toc-発展">発展</a></li>
    </ol>
  </li>
  <li><a href="#参考文献" id="markdown-toc-参考文献">参考文献</a></li>
</ol>

</details>

<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9131160172347693" crossorigin="anonymous"></script>

<!-- for_jekyll -->
<p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9131160172347693" data-ad-slot="3528582902" data-ad-format="auto" data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h1 id="量子探索アルゴリズム">量子探索アルゴリズム</h1>

<h2 id="オラクル">オラクル</h2>

<h3 id="オラクルとは">オラクルとは</h3>

<p><strong>探索問題とは一般にN個の要素からM個の解を見つける</strong>問題のこと。例として名簿データベースから佐藤さんだけを取り出しないなどがある。Nこの要素がn桁のビット列\(x = x_1 x_2 \cdots x_n\)でラベル付けされているとして、この探索問題に対する「古典オラクル」を次のように定義する。</p>

\[f(x) = \left\{ 
\begin{array}{cl}
1 &amp;&amp; (xは解) \\
0 &amp;&amp; (xは解でない)
\end{array} \right.\]

<p>つまりfは要素のラベルxを与えるとその要素が解であるかを2択で教えてくれる関数である。名簿の例では\(名簿_0 = 高橋, 名簿_1 = 佐藤\)のとき、\(f(0) = 0, f(1) = 1\)となる。オラクル(Oracle)は日本語で神託という意味であり、中身はブラックボックスだけれどとにかく答えを教えてくれる抽象的な存在で、それがどのように実装されているかは気にしない(実際に実装が存在する必要もない)。探索問題を解く古典アルゴリズムの計算量は\(x\)が解であるかを古典オラクルに尋ねる回数で評価する。こうすることで、問題の子細に依存しない統一的な評価が可能になる。<br />
一方、探索問題を解く量子アルゴリズムの計算量は、次の(量子)オラクル\(\mathcal{O}_f\)を呼ぶ回数で評価する。</p>

\[\left|x \right\rangle \otimes \left|q \right\rangle \xrightarrow{\mathcal{O}_f} 
\left|x \right\rangle \otimes \left|q \oplus f(x) \right\rangle\]

<table>
  <tbody>
    <tr>
      <td>ここで入力状態$$\left</td>
      <td>x \right\rangle\(は入力ビット列xを計算規定で表した状態、\)\left</td>
      <td>q \right\rangle\(は補助ビット、\)\oplus\(はmod 2の加算(XOR演算)である。xが探索問題の解であるかどうかは、補助ビットqが反転したかどうかをチェックすればわかる:\)\left</td>
      <td>x \right\rangle \left</td>
      <td>0 \right\rangle \xrightarrow{\mathcal{O}_f} \left</td>
      <td>x \right\rangle \left</td>
      <td>f(x) \right\rangle\(。他にも、補助ビットを\)\left</td>
      <td>- \right\rangle = (\left</td>
      <td>0 \right\rangle - \left</td>
      <td>1 \right\rangle)/\sqrt{2}$$とセットしておけば</td>
    </tr>
  </tbody>
</table>

\[\left|x \right\rangle \otimes \left|- \right\rangle \xrightarrow{\mathcal{O}_f} (-)^{f(x)} \left|x \right\rangle \otimes \left|- \right\rangle\]

<p>となり、xが探索問題の解のときにのみ状態の位相が反転するようにもできる。</p>

<table>
  <tbody>
    <tr>
      <td>オラクル\(\mathcal{O}_f\)のもっとも大きな特徴の一つは、入力状態が重ね合わせであってもそのまま動作することである。例えば、入力状態として全ての状態の重ね合わせ$$N^{-1/2} \sum_x \left</td>
      <td>x \right\rangle\(をとり、補助ビットを\)\left</td>
      <td>- \right\rangle$$とすれば</td>
    </tr>
  </tbody>
</table>

\[\frac{1}{\sqrt{N}} \sum_x \left|x \right\rangle \otimes \left|- \right\rangle \xrightarrow{\mathcal{O}_f} \frac{1}{\sqrt{N}} \sum_x (-1)^{f(x)} \left|x \right\rangle \otimes \left|- \right\rangle\]

<p>となる。このようにxが解のときのみ位相が反転する性質をうまく用いて解を見つけるのが、グローバーのアルゴリズム。</p>

<h2 id="グローバーのアルゴリズム">グローバーのアルゴリズム</h2>

<p>グローバーのアルゴリズムは整列化されていないデータベースから特定のデータを探索するための量子アルゴリズム。ソートされていないN個のデータに対して\(\mathcal{O}(\sqrt{N})\)回のクエリ(オラクルの呼び出しのこと)で解を見いだせる。古典コンピュータでは\(\mathcal{O}(N)\)回のクエリが必要なので、量子アルゴリズムを用いることで2次の加速が実現されることになる。<br />
オラクルさえ構成できればグローバーのアルゴリズムはあらゆる古典アルゴリズムの全探索部分を高速化することができる。例えば</p>

<ul>
  <li>充足可能性問題(SAT問題)</li>
  <li>特定のハッシュ値から元の値を探索する問題</li>
</ul>

<p>のような応用例が考えられており、後者は実際にビットコインのマイニング高速化として提案論文がある。</p>

<h3 id="アルゴリズムの流れ">アルゴリズムの流れ</h3>

<p>N個のデータベースからM個の解を探索する問題を考え、要素のラベルをn桁のビット列\(x = x_1 \cdots x_n\)とする。ここで量子ビットの表現方法から\(N = 2^n\)である。</p>

<ol>
  <li>
    <table>
      <tbody>
        <tr>
          <td>全ての状態の重ね合わせ状態$$\left</td>
          <td>s \right\rangle = \frac{1}{\sqrt{N}} \sum_x \left</td>
          <td>x \right\rangle$$を用意する</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>オラクル\(U_w\)(解に対する反転操作)を作用させる</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>$$\left</td>
          <td>s \right\rangle\(を対称軸にした反転操作\)U_s$$を作用させる</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>ステップ2, 3をk回繰り返す</li>
  <li>測定を行う</li>
</ol>

<h4 id="1-全ての状態の重ね合わせを用意する">1. 全ての状態の重ね合わせを用意する</h4>

<table>
  <tbody>
    <tr>
      <td>初期状態$$\left</td>
      <td>00\cdots 0 \right\rangle$$に対して全ての量子ビットにアダマールゲートHを作用させる。</td>
    </tr>
  </tbody>
</table>

\[(H \otimes \cdots \otimes H) \left|0 \cdots 0 \right\rangle 
= \frac{1}{(\sqrt{2})^n} (\left|0 \right\rangle + \left|1 \right\rangle) \otimes \cdots \otimes (\left|0 \right\rangle + \left|1 \right\rangle) 
= \left|s \right\rangle\]

<h4 id="2-オラクル解に対する反転操作を作用させる">2. オラクル(解に対する反転操作)を作用させる</h4>

<table>
  <tbody>
    <tr>
      <td>次にオラクルを状態$$\left</td>
      <td>s \right\rangle\(に作用させる。ここではオラクルとして、「入力\)\left</td>
      <td>x \right\rangle\(に対してxが解なら(-1)をかけて位相を反転し、解でないなら何もしない」という演算を考えることにして、補助ビットは省略する。すなわちオラクル\)U_w$$を</td>
    </tr>
  </tbody>
</table>

\[U_w = I - 2 \sum_{w\in 解} \left|w \right\rangle \left\langle w \right|\]

\[U_w \left|x \right\rangle = \left\{ \begin{array}{cl}
\left|x \right\rangle &amp; (x \ {\rm is \ not \ solution})\\ 
-\left|x \right\rangle &amp; (x \ {\rm is \ solution})
\end{array} \right.\]

<h4 id="3-対称軸にした反転操作を作用させる">3. 対称軸にした反転操作を作用させる</h4>

<table>
  <tbody>
    <tr>
      <td>ステップ2では解に対する反転操作を考えたが、ステップ3では全ての状態の重ね合わせ$$\left</td>
      <td>s \right\rangle\(を対称軸にした反転操作\)U_s$$を作用させる。</td>
    </tr>
  </tbody>
</table>

\[U_s = 2 \left|s \right\rangle \left\langle s \right| - I\]

<table>
  <tbody>
    <tr>
      <td>この演算子は入力状態$$\left</td>
      <td>\psi \right\rangle = a \left</td>
      <td>s \right\rangle + b \left</td>
      <td>s_\perp \right\rangle\((\)\left</td>
      <td>s_\perp \right\rangle\(は\)\left</td>
      <td>s \right\rangle$$に直交するベクトル)に対して</td>
    </tr>
  </tbody>
</table>

\[U_s \left|\psi \right\rangle = a \left|s \right\rangle - b \left|s_\perp \right\rangle\]

<table>
  <tbody>
    <tr>
      <td>のように作用し、$$\left</td>
      <td>s_\perp \right\rangle$$に比例する部分の位相のみを反転する。</td>
    </tr>
  </tbody>
</table>

<h4 id="4-ステップ2-3をk回繰り返す">4. ステップ2, 3をk回繰り返す</h4>

<p>上述の2つの反転操作\(U_w, U_s\)を繰り返す。後述するが、およそ\(\mathcal{O}(\sqrt{N/M})\)回の繰り返しを行えば、次のステップ5の測定で十分高い確率で解が得られる。すなわちオラクルを呼ぶ回数は\(\mathcal{O}(\sqrt{N})\)で良いことがわかる。</p>

<h4 id="5-測定を行う">5. 測定を行う</h4>

<table>
  <tbody>
    <tr>
      <td>ここまでのステップで状態は$$(U_s U_w)^k \left</td>
      <td>s \right\rangle\(となっている。後述するように、実はこの状態は、解wに対応する状態\)\left</td>
      <td>w \right\rangle$$の係数(の絶対値)のみが非常に大きくなっているため、計算基底で測定を行えば、高い確率で解wのビット列を得ることができる。</td>
    </tr>
  </tbody>
</table>

<h3 id="幾何学的な説明">幾何学的な説明</h3>

<h4 id="2次平面の定義">2次平面の定義</h4>

<table>
  <tbody>
    <tr>
      <td>まず2つの状態$$\left</td>
      <td>\alpha \right\rangle, \left</td>
      <td>\beta \right\rangle$$で張られる2次元平面を考える。</td>
    </tr>
  </tbody>
</table>

\[\left| \alpha \right\rangle = \frac{1}{\sqrt{N-M}} \sum_{x\in 解でない} \left|x \right\rangle \\
\left| \beta \right\rangle = \frac{1}{\sqrt{M}} \sum_{x \in 解} \left|x \right\rangle\]

<table>
  <tbody>
    <tr>
      <td>全ての重ね合わせ状態$$\left</td>
      <td>s \right\rangle$$は</td>
    </tr>
  </tbody>
</table>

\[\left|s \right\rangle = \sqrt{\frac{N-M}{N}} \left|\alpha \right\rangle + \sqrt{\frac{M}{N}} \left|\beta \right\rangle\]

<p>ように表されるので、これは2次元平面内のベクトルであることがわかる。特に\(\cos \frac{\theta}{2} = \sqrt{\frac{N-M}{N}}, \sin \frac{\theta}{2} = \sqrt{\frac{M}{N}}\)を満たす角度\(\theta\)を用いて</p>

\[\left|s \right\rangle = \cos\frac{\theta}{2} \left|\alpha \right\rangle  + \sin \frac{\theta}{2} \left|\beta \right\rangle\]

<p>と書ける。一般に探索問題においては\(N\gg M\)であるから、\(\theta \sim 0\)の正数であることがわかる。</p>

<p>この平面内で考えると、</p>

\[U_w \left|\alpha \right\rangle = \left|\alpha \right\rangle \\
U_w \left|\beta \right\rangle = - \left|\beta \right\rangle\]

<table>
  <tbody>
    <tr>
      <td>オラクル\(U_w\)は$$\left</td>
      <td>\alpha \right\rangle\(軸に関する反転操作であることがわかる。よって\)U_w\(を作用させた後に\)\left</td>
      <td>s \right\rangle\(を対称軸にした反転\)U_s\(を作用させると\)\left</td>
      <td>\alpha \right\rangle, \left</td>
      <td>\beta \right\rangle\(平面内にで角度\)\theta$$だけの回転が行われたことがわかる。</td>
    </tr>
  </tbody>
</table>

<p><img src="/images/qc/rotate.png" alt="グローバーのアルゴリズムの2次元平面による理解" /></p>

<p>グローバーのアルゴリズムでは\(U_s U_w\)をk回繰り返すので、状態は\(k\)回回転し、測定直前では</p>

\[(U_s U_w)^k \left|s \right\rangle 
= \cos \frac{2k+1}{2} \theta \left|\alpha \right\rangle + \sin \frac{2k+1}{2} \theta \left|\beta \right\rangle\]

<table>
  <tbody>
    <tr>
      <td>となる。\(N \gg M\)のとき\(\theta\)は0に近い正の数なので、$$\left</td>
      <td>s \right\rangle\(に\)U_s U_w\(を作用させるたびに\)\left</td>
      <td>\alpha \right\rangle\(の係数の値が小さくなり、逆に\)\left</td>
      <td>\beta \right\rangle$$の値が大きくなることがわかる。よって解が出力される確率が高くなることがわかる。</td>
    </tr>
  </tbody>
</table>

<h4 id="最適なkの見積もり">最適なkの見積もり</h4>

<table>
  <tbody>
    <tr>
      <td>最後に\(U_s U_w\)を作用させる回数k、すなわちオラクルを呼ぶ回数がどれくらいになるのかを評価しよう。$$(U_s U_w)^k\left</td>
      <td>s \right\rangle\(が\)\left</td>
      <td>\beta \right\rangle\(にもっとも近くなるのは、\)\frac{2k+1}{2} \theta\(が\)\pi/2$$に近くなるとき、すなわちkが</td>
    </tr>
  </tbody>
</table>

\[R = {\rm ClosestInteger} (\frac{\pi}{2\theta} - \frac{1}{2})\]

<p>のときとなる。ここでClosestInteger(…)は…にもっとも近い整数を表す。Rの上限を評価する。\(\theta &gt; 0\)
について成り立つ公式</p>

\[\frac{\theta}{2} \geq \sin \frac{\theta}{2} = \sqrt{\frac{M}{N}}\]

<p>を用いると</p>

\[R \leq (\frac{\pi}{2\theta} - \frac{1}{2}) + 1 \leq \frac{\pi}{4} \sqrt{\frac{N}{M}} + \frac{1}{2}\]

<p>となる。よってRはたかだか\(\mathcal{O} (\sqrt{N/M})\)であり、グローバーのアルゴリズムが\(\mathcal{O}\sqrt{N}\)で動作することがわかった。</p>

<h2 id="実装例">実装例</h2>

<h3 id="kに対する依存性">kに対する依存性</h3>

<p><img src="/images/qc/sin.png" alt="kに対する依存性" /></p>

<p>横軸がk、縦軸が解を得られる確率。幾何学的説明で示したようにsinカーブになっている。これはユニタリ変換をかけ続けているだけなので、状態がある状態に収束したりはしない。</p>

<h2 id="発展">発展</h2>

<p>これを応用して、グローバーのアルゴリズムを用いてコンビニの配置問題を解く問題がある。</p>

<p><a href="https://github.com/quantum-challenge/2019/blob/master/problems/final/Final.ipynb">IBM Quantum Challenge 2019コンテスト問題</a><br />
<a href="https://github.com/quantum-challenge/2019/blob/master/problems/final/answer_and_comment_by_judges.ipynb">その解答例</a></p>

<h1 id="参考文献">参考文献</h1>

<ul>
  <li>[1] M. A. Nielsen and I. L. Chuang, “Quantum Computation and Quantum Information 10th Anniversary Edition“, University Printing House の 6.1 The quantum search algorithm</li>
  <li>[2] D. Aggarwal, G. Brennen, T. Lee, M. Santha, and M. Tomamichel, “Quantum Attacks on Bitcoin, and How to Protect Against Them“, Ledger, [S.l.], v. 3, oct. 2018, https://ledgerjournal.org/ojs/index.php/ledger/article/view/127</li>
  <li>[3] IBM Quantum Challenge 2019, Week 2 ノートブック, https://github.com/quantum-challenge/2019/blob/master/problems/week2/week2.ipynb</li>
  <li>[4] 藤井啓祐, “グローバー探索量子アルゴリズムをとことん実装する“, https://github.com/keisukefujii/QulacsExamples/blob/master/GroverSearch.ipynb</li>
  <li>[5] <a href="https://dojo.qulacs.org/ja/latest/index.html">Quantum Native Dojo</a></li>
</ul>

<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9131160172347693" crossorigin="anonymous"></script>

<!-- for_jekyll -->
<p><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9131160172347693" data-ad-slot="3528582902" data-ad-format="auto" data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>
:ET